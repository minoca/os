# Makefile automatically generated by Minoca mingen
# Define high level variables
S :=  # Fill this in
O :=  # Fill this in
SHELL := sh
BUILD_CC := gcc
CC := no-cc
BASE_LDFLAGS := -Wl,--gc-sections
STRIP_FLAGS := -p
CPFLAGS := -p
BUILD_AR := ar
OBJCOPY := no-objcopy
BUILD_STRIP := strip
BUILD_BASE_CPPFLAGS := -I$(S)/include
IASL_FLAGS := -we
BASE_CFLAGS := -O2 -Wall -Werror -DDEBUG=1 -fno-builtin -g -save-temps=obj -ffunction-sections -fdata-sections -fvisibility=hidden -fpic
KERNEL_CFLAGS := 
BUILD_BASE_LDFLAGS := -Wl,--gc-sections
STRIP := no-strip
BUILD_BASE_CFLAGS := -O2 -Wall -Werror -DDEBUG=1 -fno-builtin -g -save-temps=obj -ffunction-sections -fdata-sections -fvisibility=hidden -mno-ms-bitfields
RCC := windres
BASE_ASFLAGS := -Wa,-g
BUILD_BASE_ASFLAGS := 
IASL := iasl
AR := no-ar
BASE_CPPFLAGS := -I$(S)/include

# Define tools:
TOOL_build_ld = @echo Linking - $@ ; \
    $(BUILD_CC) -Wl,-Map=$@.map $(BUILD_BASE_LDFLAGS) $(LDFLAGS) -o $@ $+ -Bdynamic $(DYNLIBS)

TOOL_copy = @echo Copying - $+ -> $@ ; \
    $(SHELL) -c "cp $(CPFLAGS) $+ $@ && [ -z $(CHMOD_FLAGS) ] || chmod $(CHMOD_FLAGS) $@"

TOOL_build_ar = @echo Building Library - $@ ; \
    $(BUILD_AR) rcs $@ $+

TOOL_create_mingen = @echo Bundling mingen - $@ ; \
    $(O)/../../tools/bin/chalk $+ $@

TOOL_build_cc = @echo Compiling - $+ ; \
    $(BUILD_CC) $(BUILD_BASE_CPPFLAGS) $(CPPFLAGS) $(BUILD_BASE_CFLAGS) $(CFLAGS) -MMD -MF $@.d -c -o $@ $+

TOOL_build_strip = @echo Stripping - $@ ; \
    $(BUILD_STRIP) $(STRIP_FLAGS) -o $@ $+

TOOL_build_as = @echo Assembling - $+ ; \
    $(BUILD_CC) $(BUILD_BASE_CPPFLAGS) $(CPPFLAGS) $(BUILD_BASE_CFLAGS) $(CFLAGS) -MMD -MF $@.d $(BUILD_BASE_ASFLAGS) $(ASFLAGS) -c -o $@ $+

TOOL_ckgramgen = @echo Generating Grammar - $@ ; \
    $(O)/apps/ck/lib/gramgen $@

# Default target
$(O)/apps/mingen/mingen.exe:

# Define targets for lib/yy
$(O)/lib/yy/build/lex.o: $(S)/lib/yy/lex.c
	$(TOOL_build_cc)

$(O)/lib/yy/build/parse.o: $(S)/lib/yy/parse.c
	$(TOOL_build_cc)

$(O)/lib/yy/build/parser.o: $(S)/lib/yy/parser.c
	$(TOOL_build_cc)

$(O)/lib/yy/build/yy.a: $(O)/lib/yy/build/lex.o \
        $(O)/lib/yy/build/parse.o \
        $(O)/lib/yy/build/parser.o
	$(TOOL_build_ar)

# Define targets for apps/ck
.PHONY: apps/ck/build_chalk
apps/ck/build_chalk: $(O)/apps/ck/lib/build/build/libchalk.a \
        $(O)/../../tools/bin/chalk.dll \
        $(O)/../../tools/bin/chalk.exe \
        apps/ck/modules/build_modules

# Define targets for apps/mingen
$(O)/apps/mingen/mingen.exe: CHALK_ARGS := $+ $@
$(O)/apps/mingen/mingen.exe: $(S)/apps/mingen/mkbundle.ck |  \
        $(S)/apps/mingen/make.ck \
        $(S)/apps/mingen/mingen.ck \
        $(S)/apps/mingen/ninja.ck \
        $(S)/apps/mingen/bootstrap/remakebs.sh \
        apps/ck/build_chalk
	$(TOOL_create_mingen)

# Define targets for apps/ck/lib
$(O)/apps/ck/lib/gram/gramgen.o: $(S)/apps/ck/lib/gram/gramgen.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/gramgen.exe: LDFLAGS := -pie
$(O)/apps/ck/lib/gramgen.exe: $(O)/apps/ck/lib/gram/gramgen.o \
        $(O)/lib/yy/gen/build/yy.a
	$(TOOL_build_ld)

$(O)/apps/ck/lib/gram.c: $(O)/apps/ck/lib/gramgen.exe
	$(TOOL_ckgramgen)

$(O)/apps/ck/lib/build/capi.o: $(S)/apps/ck/lib/capi.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/capilib.o: $(S)/apps/ck/lib/capilib.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/cdump.o: $(S)/apps/ck/lib/cdump.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/ckcore.o: CPPFLAGS := -I$(S)/apps/ck/lib
$(O)/apps/ck/lib/build/ckcore.o: $(S)/apps/ck/lib/ckcore.S |  \
        $(S)/apps/ck/lib/ckcore.ck
	$(TOOL_build_as)

$(O)/apps/ck/lib/build/compexpr.o: $(S)/apps/ck/lib/compexpr.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/compiler.o: $(S)/apps/ck/lib/compiler.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/compio.o: $(S)/apps/ck/lib/compio.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/compvar.o: $(S)/apps/ck/lib/compvar.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/core.o: $(S)/apps/ck/lib/core.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/debug.o: $(S)/apps/ck/lib/debug.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/dict.o: $(S)/apps/ck/lib/dict.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/except.o: $(S)/apps/ck/lib/except.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/fiber.o: $(S)/apps/ck/lib/fiber.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/gc.o: $(S)/apps/ck/lib/gc.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/gram.o: $(O)/apps/ck/lib/gram.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/int.o: $(S)/apps/ck/lib/int.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/lex.o: $(S)/apps/ck/lib/lex.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/list.o: $(S)/apps/ck/lib/list.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/module.o: $(S)/apps/ck/lib/module.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/string.o: $(S)/apps/ck/lib/string.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/utils.o: $(S)/apps/ck/lib/utils.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/value.o: $(S)/apps/ck/lib/value.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/vm.o: $(S)/apps/ck/lib/vm.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/vmsys.o: $(S)/apps/ck/lib/vmsys.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/dynwin32.o: $(S)/apps/ck/lib/dynwin32.c
	$(TOOL_build_cc)

$(O)/apps/ck/lib/build/build/libchalk.a: $(O)/apps/ck/lib/build/capi.o \
        $(O)/apps/ck/lib/build/capilib.o \
        $(O)/apps/ck/lib/build/cdump.o \
        $(O)/apps/ck/lib/build/ckcore.o \
        $(O)/apps/ck/lib/build/compexpr.o \
        $(O)/apps/ck/lib/build/compiler.o \
        $(O)/apps/ck/lib/build/compio.o \
        $(O)/apps/ck/lib/build/compvar.o \
        $(O)/apps/ck/lib/build/core.o \
        $(O)/apps/ck/lib/build/debug.o \
        $(O)/apps/ck/lib/build/dict.o \
        $(O)/apps/ck/lib/build/except.o \
        $(O)/apps/ck/lib/build/fiber.o \
        $(O)/apps/ck/lib/build/gc.o \
        $(O)/apps/ck/lib/build/gram.o \
        $(O)/apps/ck/lib/build/int.o \
        $(O)/apps/ck/lib/build/lex.o \
        $(O)/apps/ck/lib/build/list.o \
        $(O)/apps/ck/lib/build/module.o \
        $(O)/apps/ck/lib/build/string.o \
        $(O)/apps/ck/lib/build/utils.o \
        $(O)/apps/ck/lib/build/value.o \
        $(O)/apps/ck/lib/build/vm.o \
        $(O)/apps/ck/lib/build/vmsys.o \
        $(O)/apps/ck/lib/build/dynwin32.o
	$(TOOL_build_ar)

$(O)/../../tools/bin/chalk.dll: $(O)/apps/ck/lib/build/chalk.dll
	$(TOOL_copy)

$(O)/apps/ck/lib/build/chalk.dll: LDFLAGS := -shared
$(O)/apps/ck/lib/build/chalk.dll: $(O)/apps/ck/lib/build/capi.o \
        $(O)/apps/ck/lib/build/capilib.o \
        $(O)/apps/ck/lib/build/cdump.o \
        $(O)/apps/ck/lib/build/ckcore.o \
        $(O)/apps/ck/lib/build/compexpr.o \
        $(O)/apps/ck/lib/build/compiler.o \
        $(O)/apps/ck/lib/build/compio.o \
        $(O)/apps/ck/lib/build/compvar.o \
        $(O)/apps/ck/lib/build/core.o \
        $(O)/apps/ck/lib/build/debug.o \
        $(O)/apps/ck/lib/build/dict.o \
        $(O)/apps/ck/lib/build/except.o \
        $(O)/apps/ck/lib/build/fiber.o \
        $(O)/apps/ck/lib/build/gc.o \
        $(O)/apps/ck/lib/build/gram.o \
        $(O)/apps/ck/lib/build/int.o \
        $(O)/apps/ck/lib/build/lex.o \
        $(O)/apps/ck/lib/build/list.o \
        $(O)/apps/ck/lib/build/module.o \
        $(O)/apps/ck/lib/build/string.o \
        $(O)/apps/ck/lib/build/utils.o \
        $(O)/apps/ck/lib/build/value.o \
        $(O)/apps/ck/lib/build/vm.o \
        $(O)/apps/ck/lib/build/vmsys.o \
        $(O)/apps/ck/lib/build/dynwin32.o \
        $(O)/lib/yy/build/yy.a
	$(TOOL_build_ld)

# Define targets for apps/ck/app
$(O)/apps/ck/app/build/chalk.o: $(S)/apps/ck/app/chalk.c
	$(TOOL_build_cc)

$(O)/apps/ck/app/build/ckwin32.o: $(S)/apps/ck/app/ckwin32.c
	$(TOOL_build_cc)

$(O)/../../tools/bin/chalk.exe: $(O)/apps/ck/app/build/chalk.exe |  \
        $(O)/../../bin/stripped/build/chalk.exe
	$(TOOL_copy)

$(O)/../../bin/stripped/build/chalk.exe: $(O)/apps/ck/app/build/chalk.exe
	$(TOOL_build_strip)

$(O)/apps/ck/app/build/chalk.exe: LDFLAGS := -pie
$(O)/apps/ck/app/build/chalk.exe: $(O)/apps/ck/app/build/chalk.o \
        $(O)/apps/ck/app/build/ckwin32.o \
        $(O)/../../tools/bin/chalk.dll \
        $(O)/apps/ck/modules/app/build/build_app.a \
        $(O)/apps/ck/modules/bundle/build/build_bundle.a
	$(TOOL_build_ld)

# Define targets for apps/ck/modules
$(O)/../../tools/lib/chalk1/bufferedio.ck: $(S)/apps/ck/modules/bufferedio.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/cpio.ck: $(S)/apps/ck/modules/cpio.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/fileio.ck: $(S)/apps/ck/modules/fileio.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/getopt.ck: $(S)/apps/ck/modules/getopt.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/io.ck: $(S)/apps/ck/modules/io.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/iobase.ck: $(S)/apps/ck/modules/iobase.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/lzfile.ck: $(S)/apps/ck/modules/lzfile.ck
	$(TOOL_copy)

$(O)/../../tools/lib/chalk1/time.ck: $(S)/apps/ck/modules/time.ck
	$(TOOL_copy)

.PHONY: apps/ck/modules/build_modules
apps/ck/modules/build_modules: $(O)/../../tools/lib/chalk1/bufferedio.ck \
        $(O)/../../tools/lib/chalk1/cpio.ck \
        $(O)/../../tools/lib/chalk1/fileio.ck \
        $(O)/../../tools/lib/chalk1/getopt.ck \
        $(O)/../../tools/lib/chalk1/io.ck \
        $(O)/../../tools/lib/chalk1/iobase.ck \
        $(O)/../../tools/lib/chalk1/lzfile.ck \
        $(O)/../../tools/lib/chalk1/time.ck \
        apps/ck/modules/_time/build_all \
        apps/ck/modules/app/build_all \
        apps/ck/modules/bundle/build_all \
        apps/ck/modules/json/build_all \
        apps/ck/modules/lzma/build_all \
        apps/ck/modules/os/build_all \
        apps/ck/modules/spawn/build_all

# Define targets for apps/lib/lzma
$(O)/apps/lib/lzma/build/crc32.o: $(S)/apps/lib/lzma/crc32.c
	$(TOOL_build_cc)

$(O)/apps/lib/lzma/build/encopt.o: $(S)/apps/lib/lzma/encopt.c
	$(TOOL_build_cc)

$(O)/apps/lib/lzma/build/lzfind.o: $(S)/apps/lib/lzma/lzfind.c
	$(TOOL_build_cc)

$(O)/apps/lib/lzma/build/lzmadec.o: $(S)/apps/lib/lzma/lzmadec.c
	$(TOOL_build_cc)

$(O)/apps/lib/lzma/build/lzmaenc.o: $(S)/apps/lib/lzma/lzmaenc.c
	$(TOOL_build_cc)

$(O)/apps/lib/lzma/build/liblzma.a: $(O)/apps/lib/lzma/build/crc32.o \
        $(O)/apps/lib/lzma/build/encopt.o \
        $(O)/apps/lib/lzma/build/lzfind.o \
        $(O)/apps/lib/lzma/build/lzmadec.o \
        $(O)/apps/lib/lzma/build/lzmaenc.o
	$(TOOL_build_ar)

# Define targets for lib/yy/gen
$(O)/lib/yy/gen/build/lalr.o: $(S)/lib/yy/gen/lalr.c
	$(TOOL_build_cc)

$(O)/lib/yy/gen/build/lr0.o: $(S)/lib/yy/gen/lr0.c
	$(TOOL_build_cc)

$(O)/lib/yy/gen/build/output.o: $(S)/lib/yy/gen/output.c
	$(TOOL_build_cc)

$(O)/lib/yy/gen/build/parcon.o: $(S)/lib/yy/gen/parcon.c
	$(TOOL_build_cc)

$(O)/lib/yy/gen/build/verbose.o: $(S)/lib/yy/gen/verbose.c
	$(TOOL_build_cc)

$(O)/lib/yy/gen/build/yygen.o: $(S)/lib/yy/gen/yygen.c
	$(TOOL_build_cc)

$(O)/lib/yy/gen/build/yy.a: $(O)/lib/yy/gen/build/lalr.o \
        $(O)/lib/yy/gen/build/lr0.o \
        $(O)/lib/yy/gen/build/output.o \
        $(O)/lib/yy/gen/build/parcon.o \
        $(O)/lib/yy/gen/build/verbose.o \
        $(O)/lib/yy/gen/build/yygen.o
	$(TOOL_build_ar)

# Define targets for apps/ck/modules/app
$(O)/apps/ck/modules/app/build/app.o: $(S)/apps/ck/modules/app/app.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/app/build/build_app.a: $(O)/apps/ck/modules/app/build/app.o
	$(TOOL_build_ar)

.PHONY: apps/ck/modules/app/build_all
apps/ck/modules/app/build_all: $(O)/apps/ck/modules/app/build/build_app.a

# Define targets for apps/ck/modules/bundle
$(O)/apps/ck/modules/bundle/build/bundle.o: $(S)/apps/ck/modules/bundle/bundle.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/bundle/build/build_bundle.a: $(O)/apps/ck/modules/bundle/build/bundle.o
	$(TOOL_build_ar)

.PHONY: apps/ck/modules/bundle/build_all
apps/ck/modules/bundle/build_all: $(O)/apps/ck/modules/bundle/build/build_bundle.a

# Define targets for apps/ck/modules/_time
$(O)/apps/ck/modules/_time/build/entry.o: $(S)/apps/ck/modules/_time/entry.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/_time/build/time.o: $(S)/apps/ck/modules/_time/time.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/_time/build/win32.o: $(S)/apps/ck/modules/_time/win32.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/_time/build/build/_time.a: $(O)/apps/ck/modules/_time/build/entry.o \
        $(O)/apps/ck/modules/_time/build/time.o \
        $(O)/apps/ck/modules/_time/build/win32.o
	$(TOOL_build_ar)

$(O)/../../tools/lib/chalk1/_time.dll: $(O)/apps/ck/modules/_time/build/_time.dll
	$(TOOL_copy)

$(O)/apps/ck/modules/_time/build/_time.dll: LDFLAGS := -shared
$(O)/apps/ck/modules/_time/build/_time.dll: $(O)/apps/ck/modules/_time/build/entry.o \
        $(O)/apps/ck/modules/_time/build/time.o \
        $(O)/apps/ck/modules/_time/build/win32.o \
        $(O)/../../tools/bin/chalk.dll
	$(TOOL_build_ld)

.PHONY: apps/ck/modules/_time/build_all
apps/ck/modules/_time/build_all: $(O)/apps/ck/modules/_time/build/build/_time.a \
        $(O)/../../tools/lib/chalk1/_time.dll

# Define targets for apps/ck/modules/json
$(O)/apps/ck/modules/json/build/decode.o: $(S)/apps/ck/modules/json/decode.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/json/build/encode.o: $(S)/apps/ck/modules/json/encode.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/json/build/entry.o: $(S)/apps/ck/modules/json/entry.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/json/build/json.o: $(S)/apps/ck/modules/json/json.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/json/build/build/json.a: $(O)/apps/ck/modules/json/build/decode.o \
        $(O)/apps/ck/modules/json/build/encode.o \
        $(O)/apps/ck/modules/json/build/entry.o \
        $(O)/apps/ck/modules/json/build/json.o
	$(TOOL_build_ar)

$(O)/../../tools/lib/chalk1/json.dll: $(O)/apps/ck/modules/json/build/json.dll
	$(TOOL_copy)

$(O)/apps/ck/modules/json/build/json.dll: LDFLAGS := -shared
$(O)/apps/ck/modules/json/build/json.dll: $(O)/apps/ck/modules/json/build/decode.o \
        $(O)/apps/ck/modules/json/build/encode.o \
        $(O)/apps/ck/modules/json/build/entry.o \
        $(O)/apps/ck/modules/json/build/json.o \
        $(O)/../../tools/bin/chalk.dll
	$(TOOL_build_ld)

.PHONY: apps/ck/modules/json/build_all
apps/ck/modules/json/build_all: $(O)/apps/ck/modules/json/build/build/json.a \
        $(O)/../../tools/lib/chalk1/json.dll

# Define targets for apps/ck/modules/lzma
$(O)/apps/ck/modules/lzma/build/entry.o: $(S)/apps/ck/modules/lzma/entry.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/lzma/build/lzma.o: $(S)/apps/ck/modules/lzma/lzma.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/lzma/build/build/lzma.a: $(O)/apps/ck/modules/lzma/build/entry.o \
        $(O)/apps/ck/modules/lzma/build/lzma.o \
        $(O)/apps/lib/lzma/build/liblzma.a
	$(TOOL_build_ar)

$(O)/../../tools/lib/chalk1/lzma.dll: $(O)/apps/ck/modules/lzma/build/lzma.dll
	$(TOOL_copy)

$(O)/apps/ck/modules/lzma/build/lzma.dll: LDFLAGS := -shared
$(O)/apps/ck/modules/lzma/build/lzma.dll: $(O)/apps/ck/modules/lzma/build/entry.o \
        $(O)/apps/ck/modules/lzma/build/lzma.o \
        $(O)/apps/lib/lzma/build/liblzma.a \
        $(O)/../../tools/bin/chalk.dll
	$(TOOL_build_ld)

.PHONY: apps/ck/modules/lzma/build_all
apps/ck/modules/lzma/build_all: $(O)/apps/ck/modules/lzma/build/build/lzma.a \
        $(O)/../../tools/lib/chalk1/lzma.dll

# Define targets for apps/ck/modules/os
$(O)/apps/ck/modules/os/build/entry.o: $(S)/apps/ck/modules/os/entry.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/errno.o: $(S)/apps/ck/modules/os/errno.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/io.o: $(S)/apps/ck/modules/os/io.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/os.o: $(S)/apps/ck/modules/os/os.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/osinfo.o: $(S)/apps/ck/modules/os/osinfo.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/user.o: $(S)/apps/ck/modules/os/user.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/oswin32.o: $(S)/apps/ck/modules/os/oswin32.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/os/build/build/os.a: $(O)/apps/ck/modules/os/build/entry.o \
        $(O)/apps/ck/modules/os/build/errno.o \
        $(O)/apps/ck/modules/os/build/io.o \
        $(O)/apps/ck/modules/os/build/os.o \
        $(O)/apps/ck/modules/os/build/osinfo.o \
        $(O)/apps/ck/modules/os/build/user.o \
        $(O)/apps/ck/modules/os/build/oswin32.o
	$(TOOL_build_ar)

$(O)/../../tools/lib/chalk1/os.dll: $(O)/apps/ck/modules/os/build/os.dll
	$(TOOL_copy)

$(O)/apps/ck/modules/os/build/os.dll: DYNLIBS := -lws2_32
$(O)/apps/ck/modules/os/build/os.dll: LDFLAGS := -shared
$(O)/apps/ck/modules/os/build/os.dll: $(O)/apps/ck/modules/os/build/entry.o \
        $(O)/apps/ck/modules/os/build/errno.o \
        $(O)/apps/ck/modules/os/build/io.o \
        $(O)/apps/ck/modules/os/build/os.o \
        $(O)/apps/ck/modules/os/build/osinfo.o \
        $(O)/apps/ck/modules/os/build/user.o \
        $(O)/apps/ck/modules/os/build/oswin32.o \
        $(O)/../../tools/bin/chalk.dll
	$(TOOL_build_ld)

.PHONY: apps/ck/modules/os/build_all
apps/ck/modules/os/build_all: $(O)/apps/ck/modules/os/build/build/os.a \
        $(O)/../../tools/lib/chalk1/os.dll

# Define targets for apps/ck/modules/spawn
$(O)/apps/ck/modules/spawn/build/entry.o: $(S)/apps/ck/modules/spawn/entry.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/spawn/build/spawn.o: $(S)/apps/ck/modules/spawn/spawn.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/spawn/build/win32.o: $(S)/apps/ck/modules/spawn/win32.c
	$(TOOL_build_cc)

$(O)/apps/ck/modules/spawn/build/build/spawn.a: $(O)/apps/ck/modules/spawn/build/entry.o \
        $(O)/apps/ck/modules/spawn/build/spawn.o \
        $(O)/apps/ck/modules/spawn/build/win32.o
	$(TOOL_build_ar)

$(O)/../../tools/lib/chalk1/spawn.dll: $(O)/apps/ck/modules/spawn/build/spawn.dll
	$(TOOL_copy)

$(O)/apps/ck/modules/spawn/build/spawn.dll: LDFLAGS := -shared
$(O)/apps/ck/modules/spawn/build/spawn.dll: $(O)/apps/ck/modules/spawn/build/entry.o \
        $(O)/apps/ck/modules/spawn/build/spawn.o \
        $(O)/apps/ck/modules/spawn/build/win32.o \
        $(O)/../../tools/bin/chalk.dll
	$(TOOL_build_ld)

.PHONY: apps/ck/modules/spawn/build_all
apps/ck/modules/spawn/build_all: $(O)/apps/ck/modules/spawn/build/build/spawn.a \
        $(O)/../../tools/lib/chalk1/spawn.dll

# Built-in build directories target.
.builddirs:
	@echo "$(O)/apps/ck/modules/app/build" > .builddirs
	mkdir -p "$(O)/apps/ck/modules/app/build"
	@echo "$(O)/../../tools/lib/chalk1" >> .builddirs
	mkdir -p "$(O)/../../tools/lib/chalk1"
	@echo "$(O)/apps/ck/modules/_time/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/_time/build"
	@echo "$(O)/apps/ck/modules/json/build/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/json/build/build"
	@echo "$(O)/../../tools/bin" >> .builddirs
	mkdir -p "$(O)/../../tools/bin"
	@echo "$(O)/apps/ck/lib/gram" >> .builddirs
	mkdir -p "$(O)/apps/ck/lib/gram"
	@echo "$(O)/../../bin/stripped/build" >> .builddirs
	mkdir -p "$(O)/../../bin/stripped/build"
	@echo "$(O)/apps/ck/modules/_time/build/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/_time/build/build"
	@echo "$(O)/apps/ck/modules/spawn/build/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/spawn/build/build"
	@echo "$(O)/apps/ck/lib/build/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/lib/build/build"
	@echo "$(O)/lib/yy/build" >> .builddirs
	mkdir -p "$(O)/lib/yy/build"
	@echo "$(O)/apps/ck/lib" >> .builddirs
	mkdir -p "$(O)/apps/ck/lib"
	@echo "$(O)/apps/ck/modules/lzma/build/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/lzma/build/build"
	@echo "$(O)/apps/mingen" >> .builddirs
	mkdir -p "$(O)/apps/mingen"
	@echo "$(O)/apps/lib/lzma/build" >> .builddirs
	mkdir -p "$(O)/apps/lib/lzma/build"
	@echo "$(O)/apps/ck/modules/lzma/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/lzma/build"
	@echo "$(O)/apps/ck/modules/os/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/os/build"
	@echo "$(O)/lib/yy/gen/build" >> .builddirs
	mkdir -p "$(O)/lib/yy/gen/build"
	@echo "$(O)/apps/ck/modules/spawn/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/spawn/build"
	@echo "$(O)/apps/ck/modules/os/build/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/os/build/build"
	@echo "$(O)/apps/ck/lib/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/lib/build"
	@echo "$(O)/apps/ck/app/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/app/build"
	@echo "$(O)/apps/ck/modules/bundle/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/bundle/build"
	@echo "$(O)/apps/ck/modules/json/build" >> .builddirs
	mkdir -p "$(O)/apps/ck/modules/json/build"

